public class Core of

  public class List(out item; type) of

    public class item from type of
      public out this:this Owner;
      public out this Next;

      public Append(item item);
      public Prepend(item item);
    end;

    public out item First;
    public out item Last;

    public Append(item i) = Last.Append(i);
    public Prepend(item i) = First.Prepend(i);
  end;

  // Properties = List(Item, Property);
  //   Core:Properties, Core:Properties:Item;

  public List(type) = List(Item, type);

  public class Class of

    public class Property of

      public class Signature of
        public Parameters = List(Class); // :Core:Class:Property:Parameters:Item

        public out string Name;
        public out Parameters Parameters;

        public out List(Class) Parameters;  // :Core:Class:Property:Signature[0]:Item
      end;

    end;

    public class Parameter of
    end;

    public out string Name;
    public out Class Owner;  // namespace
    public out word InstanceSize;

    public out Class Ancestors[word]; //!!
    public out Parameter Parameters[word]; //!!
    public out Statement Statements[word]; //!!

    public out Property Properties[string Name] = Statement....//!!
  end;

end;

